{"version":3,"sources":["contexts/GlobalContext.tsx","services/api.ts","util/cleanCountrieName.ts","contexts/CountriesContext.tsx","hooks/useCountries.tsx","contexts/ModalContext.tsx","hooks/useModal.tsx","components/Filter/styles.ts","components/Filter/index.tsx","components/searchResultsCounter/styles.ts","components/searchResultsCounter/index.tsx","components/SearchBar/styles.ts","components/SearchBar/index.tsx","components/Modal/styles.ts","components/Modal/index.tsx","components/Loading/styles.ts","components/Loading/index.tsx","components/CountrieCard/styles.ts","components/CountrieCard/index.tsx","pages/Home/styles.ts","pages/Home/index.tsx","components/BackButton/styles.ts","components/BackButton/index.tsx","util/format.ts","components/BorderCountries/styles.ts","components/BorderCountries/index.tsx","components/DetailedCountrieInfo/styles.ts","components/DetailedCountrieInfo/index.tsx","components/NotFound/styles.ts","components/NotFound/index.tsx","pages/DetailedCountrie/styles.ts","pages/DetailedCountrie/index.tsx","routes.tsx","hooks/useGlobal.tsx","components/ThemeSwitcher/styles.ts","components/ThemeSwitcher/index.tsx","components/Header/styles.ts","components/Header/index.tsx","themes/themes.ts","styles/Layout.tsx","App.tsx","index.tsx"],"names":["GlobalContext","createContext","GlobalContextProvider","children","useState","storagedTheme","localStorage","getItem","selectedTheme","setSelectedTheme","useEffect","setItem","Provider","value","themeSwitcher","themeName","api","axios","create","baseURL","cleanCountrieName","name","includes","split","CountriesContext","CountriesProvider","countries","setCountries","detailedCountrie","setDetailedCountrie","selectedRegion","setSelectedRegion","searchValues","setSearchValues","searchList","setSearchList","error","setError","isLoading","setIsLoading","getAllCountries","a","get","then","response","data","countriesData","reduce","filteredData","countrie","flag","population","region","capital","alpha3Code","formatedName","toast","status","code","countrieData","subregion","topLevelDomain","currencies","languages","borders","nativeName","Promise","all","map","getBorderCountries","borderCountries","getCountriesByRegion","searchCountries","values","results","filter","toLowerCase","getCountrieByAlphaCode","useCountries","useContext","ModalContext","ModalProvider","setStatus","toggleStatus","useModal","Container","styled","div","theme","collors","background","secondary","props","modalStatus","Filter","type","onClick","SearchResultsCounter","length","text","Input","inputRef","useRef","current","focus","onChange","ref","placeholder","isOpen","shadow","activeItens","Modal","modalRef","handleCountriesRegion","e","currentTarget","getAttribute","handleOutsideClick","contains","target","document","addEventListener","removeEventListener","to","activeClassName","data-region","primary","Loading","CountrieInfo","CountrieCard","src","alt","Intl","NumberFormat","format","main","FilterWrapper","CoutriesWrapper","withRouter","fetchData","NavLink","BackButton","formatedValues","toString","replace","BorderCountries","InfoWrapper","DetailedCountrieInfo","undefined","NotFound","Wrapper","DetailedCountrie","alpha","useParams","className","Routes","exact","from","path","component","Home","useGlobal","Button","button","ThemeSwitcher","header","Header","id","lightMode","darkMode","GlobalStyles","createGlobalStyle","Layout","App","autoClose","position","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.415e0a80.chunk.js","sourcesContent":["import { useState, createContext, ReactNode, useEffect } from 'react';\n\ninterface GlobalContextData {\n  selectedTheme: string;\n  themeSwitcher: (themeName: string) => void;\n}\n\nexport const GlobalContext = createContext<GlobalContextData>(\n  {} as GlobalContextData\n);\n\ninterface GlobalContextProviderProps {\n  children: ReactNode;\n}\n\nexport function GlobalContextProvider({\n  children,\n}: GlobalContextProviderProps) {\n  const [selectedTheme, setSelectedTheme] = useState(() => {\n    const storagedTheme = localStorage.getItem('@Theme');\n\n    if (storagedTheme) {\n      return storagedTheme;\n    }\n\n    return 'light';\n  });\n\n  useEffect(() => {\n    localStorage.setItem('@Theme', selectedTheme);\n  }, [selectedTheme]);\n\n  function themeSwitcher(themeName: string) {\n    setSelectedTheme(themeName);\n  }\n\n  return (\n    <GlobalContext.Provider value={{ selectedTheme, themeSwitcher }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n}\n","import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: 'https://restcountries.eu/rest/v2',\n});\n","export function cleanCountrieName(name: string) {\n  if (name.includes('(')) {\n    return name.split(/\\s\\(.*?\\)/g)[0];\n  } else {\n    return name.split(',')[0];\n  }\n}\n","import { createContext, ReactNode, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { api } from '../services/api';\n\nimport { ICountrie, IDetailedCountrie } from '../types';\nimport { cleanCountrieName } from '../util/cleanCountrieName';\n\ninterface CountriesContextData {\n  countries: ICountrie[];\n  detailedCountrie: IDetailedCountrie;\n  searchList: ICountrie[];\n  selectedRegion: string;\n  searchValues: string;\n  error: boolean;\n  isLoading: boolean;\n  getAllCountries: () => void;\n  getCountriesByRegion: (region: string) => void;\n  searchCountries: (values: string) => void;\n  getCountrieByAlphaCode: (code: string) => void;\n}\n\nexport const CountriesContext = createContext<CountriesContextData>(\n  {} as CountriesContextData\n);\n\ninterface CountriesProviderProps {\n  children: ReactNode;\n}\n\nexport function CountriesProvider({ children }: CountriesProviderProps) {\n  const [countries, setCountries] = useState<ICountrie[]>([]);\n  const [detailedCountrie, setDetailedCountrie] = useState<IDetailedCountrie>(\n    {} as IDetailedCountrie\n  );\n  const [selectedRegion, setSelectedRegion] = useState('all');\n  const [searchValues, setSearchValues] = useState('');\n  const [searchList, setSearchList] = useState<ICountrie[]>([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function getAllCountries() {\n    try {\n      setIsLoading(true);\n      const countriesData = await api\n        .get('/all')\n        .then((response) => response.data);\n\n      const countries = countriesData.reduce(\n        (filteredData: ICountrie[], countrie: ICountrie) => {\n          const { flag, name, population, region, capital, alpha3Code } =\n            countrie;\n          const formatedName = cleanCountrieName(name);\n\n          return [\n            ...filteredData,\n            {\n              flag,\n              name: formatedName,\n              population,\n              region,\n              capital,\n              alpha3Code,\n            },\n          ];\n        },\n        []\n      );\n\n      setCountries(countries);\n      setSelectedRegion('all');\n      setSearchValues('');\n      setSearchList([]);\n      setError(false);\n      setIsLoading(false);\n    } catch (err) {\n      toast.error('Error getting countries information');\n      setIsLoading(false);\n    }\n  }\n\n  async function getCountriesByRegion(region: string) {\n    try {\n      if (region === 'all') {\n        getAllCountries();\n      } else {\n        setIsLoading(true);\n\n        const countriesData = await api\n          .get(`/region/${region}`)\n          .then((response) => response.data);\n\n        const countries = countriesData.reduce(\n          (filteredData: ICountrie[], countrie: ICountrie) => {\n            const { flag, name, population, region, capital, alpha3Code } =\n              countrie;\n\n            const formatedName = cleanCountrieName(name);\n            return [\n              ...filteredData,\n              {\n                flag,\n                name: formatedName,\n                population,\n                region,\n                capital,\n                alpha3Code,\n              },\n            ];\n          },\n          []\n        );\n\n        setSelectedRegion(region);\n        setCountries(countries);\n        setSearchValues('');\n        setSearchList([]);\n        setError(false);\n        setIsLoading(false);\n      }\n    } catch (err) {\n      const status = err.response.data.status;\n\n      if (status === 404) {\n        setError(true);\n        toast.error('Region not found');\n      } else {\n        toast.error('Error getting region countries');\n      }\n\n      setIsLoading(false);\n    }\n  }\n\n  async function getCountrieByAlphaCode(code: string) {\n    try {\n      setIsLoading(true);\n\n      const response = await api\n        .get(`/alpha/${code}`)\n        .then((response) => response);\n\n      const countrieData = response.data;\n\n      const {\n        flag,\n        name,\n        population,\n        region,\n        capital,\n        alpha3Code,\n        subregion,\n        topLevelDomain,\n        currencies,\n        languages,\n        borders,\n        nativeName,\n      } = countrieData;\n\n      const formatedName = cleanCountrieName(name);\n\n      const borderCountries = await Promise.all<{\n        name: string;\n        alpha3Code: string;\n      }>(borders.map((countrie: string) => getBorderCountries(countrie)));\n\n      setDetailedCountrie({\n        flag,\n        name: formatedName,\n        population,\n        region,\n        capital,\n        alpha3Code,\n        subregion,\n        topLevelDomain,\n        currencies,\n        languages,\n        borderCountries,\n        nativeName,\n      });\n      setError(false);\n      setIsLoading(false);\n    } catch (err) {\n      const status = err.response.data.status;\n\n      if (status === 404) {\n        setError(true);\n        toast.error('Countrie not found');\n      } else {\n        toast.error('Error getting countrie information');\n      }\n\n      setIsLoading(false);\n    }\n  }\n\n  async function getBorderCountries(code: string) {\n    try {\n      const countrieData = await api\n        .get(`/alpha/${code}`)\n        .then((response) => response.data);\n\n      const formatedName = cleanCountrieName(countrieData.name);\n\n      setError(false);\n\n      return { name: formatedName, alpha3Code: code };\n    } catch (err) {\n      toast.error('Error getting border countries information');\n    }\n  }\n\n  function searchCountries(values: string) {\n    setSearchValues(values);\n    if (values !== '') {\n      const results = countries.filter((countrie) =>\n        countrie.name.toLowerCase().includes(values.toLowerCase())\n      );\n\n      setSearchList(results);\n    } else {\n      setSearchList([]);\n    }\n  }\n\n  return (\n    <CountriesContext.Provider\n      value={{\n        countries,\n        detailedCountrie,\n        selectedRegion,\n        searchList,\n        searchValues,\n        error,\n        isLoading,\n        getAllCountries,\n        getCountriesByRegion,\n        searchCountries,\n        getCountrieByAlphaCode,\n      }}>\n      {children}\n    </CountriesContext.Provider>\n  );\n}\n","import { useContext } from 'react';\n\nimport { CountriesContext } from '../contexts/CountriesContext';\n\nexport function useCountries() {\n  const context = useContext(CountriesContext);\n\n  return context;\n}\n","import { createContext, ReactNode, useState } from 'react';\n\ninterface ModalContextData {\n  status: string;\n  toggleStatus: () => void;\n}\n\ninterface ModalProviderProps {\n  children: ReactNode;\n}\n\nexport const ModalContext = createContext<ModalContextData>(\n  {} as ModalContextData\n);\n\nexport function ModalProvider({ children }: ModalProviderProps) {\n  const [status, setStatus] = useState('');\n\n  function toggleStatus() {\n    switch (status) {\n      case 'open':\n        setStatus('closed');\n        break;\n      case 'closed':\n        setStatus('open');\n        break;\n      default:\n        setStatus('open');\n        break;\n    }\n  }\n\n  return (\n    <ModalContext.Provider value={{ status, toggleStatus }}>\n      {children}\n    </ModalContext.Provider>\n  );\n}\n","import { useContext } from 'react';\n\nimport { ModalContext } from '../contexts/ModalContext';\n\nexport function useModal() {\n  const context = useContext(ModalContext);\n\n  return context;\n}\n","import styled from 'styled-components';\n\ninterface ContainerProps {\n  modalStatus: string;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  box-shadow: var(--shadow);\n\n  width: 15rem;\n  height: 4rem;\n  padding: 1rem 2rem;\n  border-radius: 0.5rem;\n\n  background: ${({ theme }) => theme.collors.background.secondary};\n\n  button {\n    width: 1.5rem;\n    height: 1.5rem;\n\n    background: transparent;\n    border: none;\n    border-radius: 0.2rem;\n    cursor: pointer;\n\n    svg {\n      width: 1.5rem;\n      height: 1.5rem;\n\n      transition: transform 0.2s;\n\n      transform: ${(props) => {\n        switch (props.modalStatus) {\n          case 'open':\n            return 'rotate(180deg)';\n          case 'closed':\n            return 'rotate(initial)';\n          default:\n            return 'none';\n        }\n      }};\n    }\n  }\n\n  &:hover {\n    filter: opacity(0.8);\n  }\n`;\n","import { useModal } from '../../hooks/useModal';\n\nimport { MdKeyboardArrowUp } from 'react-icons/md';\n\nimport { Container } from './styles';\n\nexport function Filter() {\n  const { status, toggleStatus } = useModal();\n\n  return (\n    <Container modalStatus={status}>\n      <span>Filter by Region</span>\n      <button type='button' onClick={toggleStatus}>\n        <MdKeyboardArrowUp />\n      </button>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 1rem;\n\n  font-weight: var(--light-weight-font);\n  font-style: italic;\n`;\n","import { Container } from './styles';\nimport { useCountries } from '../../hooks/useCountries';\n\nexport function SearchResultsCounter() {\n  const { searchValues, searchList } = useCountries();\n\n  return (\n    <Container>\n      {searchValues && (\n        <p>\n          {searchList.length > 1\n            ? `${searchList.length} results`\n            : `${searchList.length} result`}{' '}\n          found\n        </p>\n      )}\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  box-shadow: var(--shadow);\n\n  max-width: 30rem;\n  width: 30rem;\n  height: 4rem;\n  padding: 1rem 2rem;\n  border-radius: 0.5rem;\n  margin-right: 2rem;\n\n  cursor: pointer;\n\n  background: ${({ theme }) => theme.collors.background.secondary};\n\n  svg {\n    margin-right: 1rem;\n  }\n\n  input {\n    background: transparent;\n    border: none;\n    height: 1.5rem;\n    flex: 1;\n    padding: 0.5rem;\n    border-radius: 0.2rem;\n\n    &::placeholder {\n      color: ${({ theme }) => theme.collors.text.secondary};\n      font-size: 1rem;\n    }\n  }\n\n  &:hover {\n    filter: opacity(0.8);\n  }\n\n  @media only screen and (max-width: 728px) {\n    margin-bottom: 2rem;\n    margin-right: 0;\n    width: 100%;\n    max-width: 100%;\n  }\n`;\n","import { useRef } from 'react';\n\nimport { useCountries } from '../../hooks/useCountries';\n\nimport { SearchResultsCounter } from '../searchResultsCounter';\n\nimport { FaSearch } from 'react-icons/fa';\n\nimport { Container } from './styles';\n\nexport function Input() {\n  const { searchCountries, searchValues } = useCountries();\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  function handleInputFocus() {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }\n\n  function handleSearch() {\n    if (inputRef.current) {\n      searchCountries(inputRef.current.value);\n    }\n  }\n\n  return (\n    <div>\n      <Container onClick={handleInputFocus}>\n        <FaSearch />\n        <input\n          onChange={handleSearch}\n          value={searchValues}\n          ref={inputRef}\n          type='text'\n          placeholder='Search for a country...'\n        />\n      </Container>\n      <SearchResultsCounter />\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\ninterface ContainerProps {\n  isOpen: string;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  opacity: ${(props) => (props.isOpen === 'open' ? '100%' : '0%')};\n  pointer-events: ${(props) => (props.isOpen === 'open' ? 'initial' : 'none')};\n  transition: opacity 0.2s;\n\n  width: 15rem;\n  padding: 1rem 2rem;\n\n  box-shadow: 3px 0px 3px ${({ theme }) => theme.collors.shadow};\n\n  border-radius: 0.5rem;\n\n  background: ${({ theme }) => theme.collors.background.secondary};\n\n  position: absolute;\n  right: 0;\n  top: 5rem;\n  z-index: 100;\n\n  li {\n    & + li {\n      margin-top: 1rem;\n    }\n\n    &:hover {\n      filter: opacity(0.8);\n    }\n\n    a.selected {\n      color: ${({ theme }) => theme.collors.activeItens};\n    }\n  }\n\n  @media only screen and (max-width: 728px) {\n    left: 0;\n    top: 12rem;\n  }\n`;\n","import { useRef, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { useModal } from '../../hooks/useModal';\nimport { useCountries } from '../../hooks/useCountries';\n\nimport { Container } from './styles';\n\nexport function Modal() {\n  const { status, toggleStatus } = useModal();\n  const { getCountriesByRegion } = useCountries();\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    function handleOutsideClick(e: MouseEvent): void {\n      if (modalRef.current && modalRef.current.contains(e.target as Node)) {\n        return;\n      }\n\n      toggleStatus();\n    }\n\n    if (status === 'open') {\n      document.addEventListener('click', handleOutsideClick);\n    }\n\n    return () => {\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, [status, toggleStatus]);\n\n  function handleCountriesRegion(e: React.MouseEvent) {\n    const region = e.currentTarget.getAttribute('data-region');\n\n    if (region) {\n      getCountriesByRegion(region);\n    }\n  }\n\n  return (\n    <Container ref={modalRef} isOpen={status}>\n      {status === 'open' && (\n        <>\n          <ul>\n            <li>\n              <NavLink\n                to='/africa'\n                activeClassName='selected'\n                data-region='africa'\n                onClick={(e) => {\n                  handleCountriesRegion(e);\n                }}>\n                Africa\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to='/americas'\n                activeClassName='selected'\n                data-region='americas'\n                onClick={(e) => {\n                  handleCountriesRegion(e);\n                }}>\n                Americas\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to='/asia'\n                activeClassName='selected'\n                data-region='asia'\n                onClick={(e) => {\n                  handleCountriesRegion(e);\n                }}>\n                Asia\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to='/europe'\n                activeClassName='selected'\n                data-region='europe'\n                onClick={(e) => {\n                  handleCountriesRegion(e);\n                }}>\n                Europe\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to='/oceania'\n                activeClassName='selected'\n                data-region='oceania'\n                onClick={(e) => {\n                  handleCountriesRegion(e);\n                }}>\n                Oceania\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to='/all'\n                activeClassName='selected'\n                data-region='all'\n                onClick={(e) => {\n                  handleCountriesRegion(e);\n                }}>\n                All Regions\n              </NavLink>\n            </li>\n          </ul>\n        </>\n      )}\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: calc(100vh - 4rem);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  div {\n    border: 0.5rem solid ${({ theme }) => theme.collors.text.primary};\n    border-top: 0.5rem solid ${({ theme }) => theme.collors.activeItens};\n    border-radius: 50%;\n    width: 60px;\n    height: 60px;\n    animation: spin 1s linear infinite;\n\n    @keyframes spin {\n      0% {\n        transform: rotate(0deg);\n      }\n      100% {\n        transform: rotate(360deg);\n      }\n    }\n  }\n`;\n","import { Container } from './styles';\n\nexport function Loading() {\n  return (\n    <Container>\n      <div></div>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  border-radius: 0.5rem;\n  background: ${({ theme }) => theme.collors.background.secondary};\n  box-shadow: var(--shadow);\n\n  flex-basis: 300px;\n\n  div {\n    height: 200px;\n\n    a {\n      img {\n        display: block;\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        object-fit: cover;\n        border-radius: 0.5rem 0.5rem 0 0;\n\n        &:hover {\n          filter: opacity(0.8);\n        }\n      }\n    }\n  }\n`;\n\nexport const CountrieInfo = styled.div`\n  padding: 2rem 2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  h3 {\n    margin-bottom: 1rem;\n  }\n\n  p {\n    span {\n      font-weight: var(--light-weight-font);\n    }\n\n    & + p {\n      margin-top: 0.5rem;\n    }\n  }\n`;\n","import { NavLink } from 'react-router-dom';\n\nimport { ICountrie } from '../../types';\n\nimport { Container, CountrieInfo } from './styles';\n\ninterface CountrieCardProps {\n  countrie: ICountrie;\n}\n\nexport function CountrieCard({ countrie }: CountrieCardProps) {\n  return (\n    <Container>\n      <div>\n        <NavLink to={`countrie/${countrie.alpha3Code}`}>\n          <img src={countrie.flag} alt={countrie.name} />\n        </NavLink>\n      </div>\n      <CountrieInfo>\n        <h3>{countrie.name}</h3>\n        <p>\n          Population:&nbsp;\n          <span>\n            {new Intl.NumberFormat('en-US').format(countrie.population)}\n          </span>\n        </p>\n        <p>\n          Region:\n          <span> {countrie.region}</span>\n        </p>\n        <p>\n          Capital:\n          <span> {countrie.capital}</span>\n        </p>\n      </CountrieInfo>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  max-width: 1440px;\n  padding: 4rem 2rem;\n  margin: 0 auto;\n\n  h1 {\n    font-size: 2rem;\n    text-transform: capitalize;\n    margin-top: 4rem;\n  }\n\n  h1 ~ div {\n    margin-top: 2rem !important;\n  }\n\n  @media only screen and (max-width: 711px) {\n    h1 {\n      text-align: center;\n    }\n  }\n`;\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  position: relative;\n\n  @media only screen and (max-width: 728px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nexport const CoutriesWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 3rem;\n\n  position: relative;\n  z-index: 10;\n\n  margin-top: 4rem;\n\n  @media only screen and (max-width: 728px) {\n    justify-content: center;\n  }\n`;\n","import { useEffect, useRef } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { useCountries } from '../../hooks/useCountries';\nimport { ModalProvider } from '../../contexts/ModalContext';\n\nimport { Filter } from '../../components/Filter';\nimport { Input } from '../../components/SearchBar';\nimport { Modal } from '../../components/Modal';\nimport { Loading } from '../../components/Loading';\nimport { CountrieCard } from '../../components/CountrieCard';\n\nimport { Container, FilterWrapper, CoutriesWrapper } from './styles';\n\nfunction Home() {\n  const { countries, searchList, selectedRegion, getAllCountries, isLoading } =\n    useCountries();\n  const fetchData = useRef(getAllCountries);\n\n  useEffect(() => {\n    fetchData.current();\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <>\n          <Container>\n            <FilterWrapper>\n              <Input />\n              <ModalProvider>\n                <Filter />\n                <Modal />\n              </ModalProvider>\n            </FilterWrapper>\n            {selectedRegion === 'all' ? (\n              <h1>All Regions</h1>\n            ) : (\n              <h1>{selectedRegion}</h1>\n            )}\n\n            {countries && (\n              <>\n                <CoutriesWrapper>\n                  {(searchList.length > 0 ? searchList : countries).map(\n                    ({\n                      flag,\n                      name,\n                      region,\n                      population,\n                      capital,\n                      alpha3Code,\n                    }) => (\n                      <CountrieCard\n                        countrie={{\n                          flag,\n                          name,\n                          region,\n                          population,\n                          capital,\n                          alpha3Code,\n                        }}\n                        key={alpha3Code}\n                      />\n                    )\n                  )}\n                </CoutriesWrapper>\n              </>\n            )}\n          </Container>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default withRouter(Home);\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled(NavLink)`\n  background: ${({ theme }) => theme.collors.background.secondary};\n  box-shadow: var(--shadow);\n\n  width: 9rem;\n  height: 3rem;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 4rem;\n  border-radius: 0.3rem;\n  padding: 1rem 2rem;\n\n  span {\n    margin-left: 1rem;\n  }\n\n  &:hover {\n    filter: opacity(0.8);\n  }\n`;\n","import { useCountries } from '../../hooks/useCountries';\n\nimport { FaArrowLeft } from 'react-icons/fa';\n\nimport { Container } from './styles';\n\nexport function BackButton() {\n  const { selectedRegion } = useCountries();\n\n  return (\n    <Container to={`/${selectedRegion}`}>\n      <FaArrowLeft />\n      <span>Back</span>\n    </Container>\n  );\n}\n","export function format(value: [{ name: string }]) {\n  return value\n    .reduce((formatedValues: string[], value) => {\n      return (formatedValues = [...formatedValues, value.name]);\n    }, [])\n    .toString()\n    .replace(/,/g, ', ');\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 4rem;\n  display: flex;\n\n  span {\n    min-width: 150px;\n    margin-right: 1rem;\n  }\n\n  ul {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 1rem;\n\n    li {\n      a {\n        background: ${({ theme }) => theme.collors.background.secondary};\n        box-shadow: var(--shadow);\n\n        display: block;\n        line-height: 2rem;\n        padding: 0 2rem;\n        border-radius: 0.2rem;\n\n        &:hover {\n          filter: opacity(0.8);\n        }\n      }\n    }\n  }\n\n  @media only screen and (max-width: 728px) {\n    flex-direction: column;\n    gap: 1rem;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\n\nimport { useCountries } from '../../hooks/useCountries';\n\nimport { Container } from './styles';\n\nexport function BorderCountries() {\n  const { detailedCountrie } = useCountries();\n  const { borderCountries } = detailedCountrie;\n\n  return (\n    <>\n      {borderCountries && (\n        <Container>\n          <span>Border Countries:</span>\n          <div>\n            <ul>\n              {borderCountries.map(({ name, alpha3Code }) => (\n                <li key={alpha3Code}>\n                  <NavLink to={`/countrie/${alpha3Code}`}>{name}</NavLink>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </Container>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  margin-top: 2rem;\n\n  li {\n    & + li {\n      margin-top: 1rem;\n    }\n\n    span {\n      font-weight: var(--light-weight-font);\n    }\n  }\n\n  @media only screen and (max-width: 1300px) {\n    justify-content: initial;\n    gap: 4rem;\n  }\n\n  @media only screen and (max-width: 728px) {\n    flex-direction: column;\n    gap: 1rem;\n  }\n`;\n","import { useCountries } from '../../hooks/useCountries';\n\nimport { format } from '../../util/format';\nimport { BorderCountries } from '../BorderCountries';\n\nimport { Container, InfoWrapper } from './styles';\n\nexport function DetailedCountrieInfo() {\n  const { detailedCountrie } = useCountries();\n  return (\n    <Container>\n      <h1>{detailedCountrie.name}</h1>\n      <InfoWrapper>\n        <ul>\n          <li>\n            Native Name:&nbsp;<span>{detailedCountrie.nativeName}</span>\n          </li>\n          <li>\n            Population:&nbsp;<span>{detailedCountrie.population}</span>\n          </li>\n          <li>\n            Region:&nbsp;<span>{detailedCountrie.region}</span>\n          </li>\n          <li>\n            Sub Region:&nbsp;<span>{detailedCountrie.subregion}</span>\n          </li>\n          <li>\n            Capital:&nbsp;<span>{detailedCountrie.capital}</span>\n          </li>\n        </ul>\n\n        <ul>\n          <li>\n            Top Level Domain:&nbsp;\n            <span>{detailedCountrie.topLevelDomain}</span>\n          </li>\n          <li>\n            Currencies:&nbsp;\n            <span>\n              {detailedCountrie.currencies &&\n                format(detailedCountrie.currencies)}\n            </span>\n          </li>\n          <li>\n            Languages:&nbsp;\n            <span>\n              {detailedCountrie.languages && format(detailedCountrie.languages)}\n            </span>\n          </li>\n        </ul>\n      </InfoWrapper>\n      {detailedCountrie.borderCountries !== undefined &&\n        detailedCountrie.borderCountries.length > 0 && <BorderCountries />}\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 12rem;\n  text-align: center;\n\n  h1 {\n    font-size: 5rem;\n  }\n`;\n","import { Container } from './styles';\n\nexport function NotFound() {\n  return (\n    <Container>\n      <h1>404</h1>\n      <p>Page not found :(</p>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding: 4rem 2rem;\n  max-width: 1440px;\n  margin: 0 auto;\n`;\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 4rem;\n\n  .flag {\n    width: 600px;\n    height: 400px;\n    box-shadow: var(--shadow);\n    border-radius: 0.5rem;\n\n    img {\n      display: block;\n      overflow: hidden;\n      border-radius: 0.5rem;\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n      aspect-ratio: attr(width) / attr(height);\n    }\n  }\n\n  @media only screen and (max-width: 1330px) {\n    grid-template-columns: 1fr;\n\n    .flag {\n      width: 100%;\n      height: auto;\n      max-height: 600px;\n    }\n  }\n\n  @media only screen and (max-width: 728px) {\n    .flag {\n      min-height: 200px;\n    }\n  }\n`;\n","import { useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { useCountries } from '../../hooks/useCountries';\n\nimport { BackButton } from '../../components/BackButton';\nimport { DetailedCountrieInfo } from '../../components/DetailedCountrieInfo';\nimport { NotFound } from '../../components/NotFound';\n\nimport { Container, Wrapper } from './styles';\nimport { Loading } from '../../components/Loading';\n\nexport function DetailedCountrie() {\n  const { alpha } = useParams<{ alpha: string }>();\n  const { detailedCountrie, getCountrieByAlphaCode, error, isLoading } =\n    useCountries();\n  const fetchData = useRef(getCountrieByAlphaCode);\n\n  useEffect(() => {\n    fetchData.current(alpha);\n  }, [fetchData, alpha]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <>\n          <Container>\n            <BackButton />\n            {error ? (\n              <NotFound />\n            ) : (\n              <>\n                {detailedCountrie && (\n                  <Wrapper>\n                    <div className='flag'>\n                      <img\n                        src={detailedCountrie.flag}\n                        alt={detailedCountrie.name}\n                      />\n                    </div>\n                    <DetailedCountrieInfo />\n                  </Wrapper>\n                )}\n              </>\n            )}\n          </Container>\n        </>\n      )}\n    </>\n  );\n}\n","import { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport { DetailedCountrie } from './pages/DetailedCountrie';\nimport { NotFound } from './components/NotFound';\n\nexport function Routes() {\n  return (\n    <Switch>\n      <Redirect exact from='/' to='/all' />\n      <Route path='/all' component={Home}></Route>\n      <Route path='/africa' component={Home} />\n      <Route path='/americas' component={Home} />\n      <Route path='/asia' component={Home} />\n      <Route path='/europe' component={Home} />\n      <Route path='/oceania' component={Home} />\n      <Route path='/countrie/:alpha' component={DetailedCountrie} />\n      <Route path='*' component={NotFound} />\n    </Switch>\n  );\n}\n","import { useContext } from 'react';\n\nimport { GlobalContext } from '../contexts/GlobalContext';\n\nexport function useGlobal() {\n  const context = useContext(GlobalContext);\n\n  return context;\n}\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  width: 8rem;\n  height: 2rem;\n  padding: 0.5rem 0 0.5rem 0.5rem;\n\n  background: transparent;\n  border-radius: 0.2rem;\n\n  display: flex;\n  align-items: center;\n\n  svg {\n    width: 1.125rem;\n    height: 1.125rem;\n    margin-right: 0.5rem;\n  }\n\n  &:hover {\n    filter: opacity(0.8);\n  }\n`;\n","import { useGlobal } from '../../hooks/useGlobal';\n\nimport { Button } from './styles';\n\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport function ThemeSwitcher() {\n  const { selectedTheme, themeSwitcher } = useGlobal();\n\n  function handleThemeSwitcher() {\n    themeSwitcher(selectedTheme === 'dark' ? 'light' : 'dark');\n  }\n\n  return (\n    <Button onClick={handleThemeSwitcher}>\n      {selectedTheme === 'dark' ? <FaSun /> : <FaMoon />}\n      <span>{selectedTheme === 'dark' ? 'Light Mode' : 'Dark Mode'}</span>\n    </Button>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.header`\n  background: ${({ theme }) => theme.collors.background.secondary};\n`;\n\nexport const Wrapper = styled.div`\n  max-width: 1440px;\n  height: 6rem;\n  padding: 0 2rem;\n  margin: 0 auto;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n\n  h1 {\n    font-size: 2rem;\n  }\n\n  @media only screen and (max-width: 728px) {\n    justify-content: initial;\n\n    h1 {\n      font-size: 1rem;\n      flex-grow: 1;\n    }\n  }\n`;\n","import { ThemeSwitcher } from '../ThemeSwitcher';\n\nimport { Container, Wrapper } from './styles';\n\nexport function Header() {\n  return (\n    <Container id='modalAppElement'>\n      <Wrapper>\n        <h1>Where in the World?</h1>\n        <ThemeSwitcher />\n      </Wrapper>\n    </Container>\n  );\n}\n","import { DefaultTheme } from 'styled-components';\n\nexport const lightMode: DefaultTheme = {\n  id: 'T_001',\n  name: 'light',\n  collors: {\n    text: {\n      primary: '#111517',\n      secondary: '#858585',\n    },\n    background: {\n      primary: '#fafafa',\n      secondary: '#ffffff',\n    },\n    shadow: '#cccccc',\n    activeItens: '#fc5404',\n  },\n};\n\nexport const darkMode: DefaultTheme = {\n  id: 'T_002',\n  name: 'dark',\n  collors: {\n    text: {\n      primary: '#ffffff',\n      secondary: '#d8d8d8',\n    },\n    background: {\n      primary: '#202c37',\n      secondary: '#2b3945',\n    },\n    shadow: '#1e2730',\n    activeItens: '#fc5404',\n  },\n};\n","import 'react-toastify/dist/ReactToastify.css';\nimport { ReactNode } from 'react';\nimport { useGlobal } from '../hooks/useGlobal';\n\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport { lightMode, darkMode } from '../themes/themes';\n\nconst GlobalStyles = createGlobalStyle`\n  :root {\n    --font: 'Nunito Sans', sans-serif;\n    --home-font-size: 1rem;\n    --details-font-size: 0,875rem;\n    --light-weight-font: 300;\n    --regular-weight-font: 600;\n    --bold-weight-font: 800;\n    --shadow: 3px 3px 3px ${({ theme }) => theme.collors.shadow};\n  }\n\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: ${({ theme }) => theme.collors.background.primary};\n    -webkit-font-smoothing: antialiased;\n  }\n\n  button {\n    border: none;\n    cursor: pointer;\n  }\n\n  #root {\n    position: relative;\n  }\n\n  body, input, button {\n    font-family: var(--font);\n    font-weight: var(--regular-weight-font);\n    font-size: var(--home-font-size);\n    color: ${({ theme }) => theme.collors.text.primary};\n  }\n\n  button:focus, input:focus {\n    outline: 0;\n    box-shadow: 0 0 0 3px ${({ theme }) => theme.collors.activeItens};\n  }\n\n  ul {\n    list-style: none;\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\ninterface LayoutProps {\n  children: ReactNode;\n}\n\nexport function Layout({ children }: LayoutProps) {\n  const { selectedTheme } = useGlobal();\n  let theme;\n\n  switch (selectedTheme) {\n    case 'light':\n      theme = lightMode;\n      break;\n    case 'dark':\n      theme = darkMode;\n      break;\n    default:\n      theme = lightMode;\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {children}\n    </ThemeProvider>\n  );\n}\n","import { BrowserRouter } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n\nimport { GlobalContextProvider } from './contexts/GlobalContext';\nimport { CountriesProvider } from './contexts/CountriesContext';\nimport { Routes } from './routes';\n\nimport { Header } from './components/Header';\n\nimport { Layout } from './styles/Layout';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <GlobalContextProvider>\n        <Layout>\n          <Header />\n          <CountriesProvider>\n            <Routes />\n          </CountriesProvider>\n          <ToastContainer autoClose={3000} position='bottom-right' />\n        </Layout>\n      </GlobalContextProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}